{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "36760c3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "a6cefa47",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = 'F:\\Documents\\File Ino\\Portfolio Ino\\Simple Linear Regression Portfolio\\kc_house_data.csv'\n",
    "df = pd.read_csv(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "c43a880e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>...</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7129300520</td>\n",
       "      <td>20141013T000000</td>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>1180</td>\n",
       "      <td>0</td>\n",
       "      <td>1955</td>\n",
       "      <td>0</td>\n",
       "      <td>98178</td>\n",
       "      <td>47.5112</td>\n",
       "      <td>-122.257</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6414100192</td>\n",
       "      <td>20141209T000000</td>\n",
       "      <td>538000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>2570</td>\n",
       "      <td>7242</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>2170</td>\n",
       "      <td>400</td>\n",
       "      <td>1951</td>\n",
       "      <td>1991</td>\n",
       "      <td>98125</td>\n",
       "      <td>47.7210</td>\n",
       "      <td>-122.319</td>\n",
       "      <td>1690</td>\n",
       "      <td>7639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5631500400</td>\n",
       "      <td>20150225T000000</td>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>770</td>\n",
       "      <td>0</td>\n",
       "      <td>1933</td>\n",
       "      <td>0</td>\n",
       "      <td>98028</td>\n",
       "      <td>47.7379</td>\n",
       "      <td>-122.233</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2487200875</td>\n",
       "      <td>20141209T000000</td>\n",
       "      <td>604000.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3.00</td>\n",
       "      <td>1960</td>\n",
       "      <td>5000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>1050</td>\n",
       "      <td>910</td>\n",
       "      <td>1965</td>\n",
       "      <td>0</td>\n",
       "      <td>98136</td>\n",
       "      <td>47.5208</td>\n",
       "      <td>-122.393</td>\n",
       "      <td>1360</td>\n",
       "      <td>5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1954400510</td>\n",
       "      <td>20150218T000000</td>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>1680</td>\n",
       "      <td>0</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>98074</td>\n",
       "      <td>47.6168</td>\n",
       "      <td>-122.045</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id             date     price  bedrooms  bathrooms  sqft_living  \\\n",
       "0  7129300520  20141013T000000  221900.0         3       1.00         1180   \n",
       "1  6414100192  20141209T000000  538000.0         3       2.25         2570   \n",
       "2  5631500400  20150225T000000  180000.0         2       1.00          770   \n",
       "3  2487200875  20141209T000000  604000.0         4       3.00         1960   \n",
       "4  1954400510  20150218T000000  510000.0         3       2.00         1680   \n",
       "\n",
       "   sqft_lot  floors  waterfront  view  ...  grade  sqft_above  sqft_basement  \\\n",
       "0      5650     1.0           0     0  ...      7        1180              0   \n",
       "1      7242     2.0           0     0  ...      7        2170            400   \n",
       "2     10000     1.0           0     0  ...      6         770              0   \n",
       "3      5000     1.0           0     0  ...      7        1050            910   \n",
       "4      8080     1.0           0     0  ...      8        1680              0   \n",
       "\n",
       "   yr_built  yr_renovated  zipcode      lat     long  sqft_living15  \\\n",
       "0      1955             0    98178  47.5112 -122.257           1340   \n",
       "1      1951          1991    98125  47.7210 -122.319           1690   \n",
       "2      1933             0    98028  47.7379 -122.233           2720   \n",
       "3      1965             0    98136  47.5208 -122.393           1360   \n",
       "4      1987             0    98074  47.6168 -122.045           1800   \n",
       "\n",
       "   sqft_lot15  \n",
       "0        5650  \n",
       "1        7639  \n",
       "2        8062  \n",
       "3        5000  \n",
       "4        7503  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "4374c15d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(21613, 21)"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "c7d8a9bd",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21613 entries, 0 to 21612\n",
      "Data columns (total 21 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   id             21613 non-null  int64  \n",
      " 1   date           21613 non-null  object \n",
      " 2   price          21613 non-null  float64\n",
      " 3   bedrooms       21613 non-null  int64  \n",
      " 4   bathrooms      21613 non-null  float64\n",
      " 5   sqft_living    21613 non-null  int64  \n",
      " 6   sqft_lot       21613 non-null  int64  \n",
      " 7   floors         21613 non-null  float64\n",
      " 8   waterfront     21613 non-null  int64  \n",
      " 9   view           21613 non-null  int64  \n",
      " 10  condition      21613 non-null  int64  \n",
      " 11  grade          21613 non-null  int64  \n",
      " 12  sqft_above     21613 non-null  int64  \n",
      " 13  sqft_basement  21613 non-null  int64  \n",
      " 14  yr_built       21613 non-null  int64  \n",
      " 15  yr_renovated   21613 non-null  int64  \n",
      " 16  zipcode        21613 non-null  int64  \n",
      " 17  lat            21613 non-null  float64\n",
      " 18  long           21613 non-null  float64\n",
      " 19  sqft_living15  21613 non-null  int64  \n",
      " 20  sqft_lot15     21613 non-null  int64  \n",
      "dtypes: float64(5), int64(15), object(1)\n",
      "memory usage: 3.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "cdd0c0e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2.161300e+04</td>\n",
       "      <td>2.161300e+04</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>2.161300e+04</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "      <td>21613.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.580302e+09</td>\n",
       "      <td>5.400881e+05</td>\n",
       "      <td>3.370842</td>\n",
       "      <td>2.114757</td>\n",
       "      <td>2079.899736</td>\n",
       "      <td>1.510697e+04</td>\n",
       "      <td>1.494309</td>\n",
       "      <td>0.007542</td>\n",
       "      <td>0.234303</td>\n",
       "      <td>3.409430</td>\n",
       "      <td>7.656873</td>\n",
       "      <td>1788.390691</td>\n",
       "      <td>291.509045</td>\n",
       "      <td>1971.005136</td>\n",
       "      <td>84.402258</td>\n",
       "      <td>98077.939805</td>\n",
       "      <td>47.560053</td>\n",
       "      <td>-122.213896</td>\n",
       "      <td>1986.552492</td>\n",
       "      <td>12768.455652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.876566e+09</td>\n",
       "      <td>3.671272e+05</td>\n",
       "      <td>0.930062</td>\n",
       "      <td>0.770163</td>\n",
       "      <td>918.440897</td>\n",
       "      <td>4.142051e+04</td>\n",
       "      <td>0.539989</td>\n",
       "      <td>0.086517</td>\n",
       "      <td>0.766318</td>\n",
       "      <td>0.650743</td>\n",
       "      <td>1.175459</td>\n",
       "      <td>828.090978</td>\n",
       "      <td>442.575043</td>\n",
       "      <td>29.373411</td>\n",
       "      <td>401.679240</td>\n",
       "      <td>53.505026</td>\n",
       "      <td>0.138564</td>\n",
       "      <td>0.140828</td>\n",
       "      <td>685.391304</td>\n",
       "      <td>27304.179631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000102e+06</td>\n",
       "      <td>7.500000e+04</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>290.000000</td>\n",
       "      <td>5.200000e+02</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>290.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1900.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>98001.000000</td>\n",
       "      <td>47.155900</td>\n",
       "      <td>-122.519000</td>\n",
       "      <td>399.000000</td>\n",
       "      <td>651.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.123049e+09</td>\n",
       "      <td>3.219500e+05</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.750000</td>\n",
       "      <td>1427.000000</td>\n",
       "      <td>5.040000e+03</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>1190.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1951.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>98033.000000</td>\n",
       "      <td>47.471000</td>\n",
       "      <td>-122.328000</td>\n",
       "      <td>1490.000000</td>\n",
       "      <td>5100.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.904930e+09</td>\n",
       "      <td>4.500000e+05</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.250000</td>\n",
       "      <td>1910.000000</td>\n",
       "      <td>7.618000e+03</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>1560.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1975.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>98065.000000</td>\n",
       "      <td>47.571800</td>\n",
       "      <td>-122.230000</td>\n",
       "      <td>1840.000000</td>\n",
       "      <td>7620.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.308900e+09</td>\n",
       "      <td>6.450000e+05</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>2550.000000</td>\n",
       "      <td>1.068800e+04</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>2210.000000</td>\n",
       "      <td>560.000000</td>\n",
       "      <td>1997.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>98118.000000</td>\n",
       "      <td>47.678000</td>\n",
       "      <td>-122.125000</td>\n",
       "      <td>2360.000000</td>\n",
       "      <td>10083.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.900000e+09</td>\n",
       "      <td>7.700000e+06</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13540.000000</td>\n",
       "      <td>1.651359e+06</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>9410.000000</td>\n",
       "      <td>4820.000000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>98199.000000</td>\n",
       "      <td>47.777600</td>\n",
       "      <td>-121.315000</td>\n",
       "      <td>6210.000000</td>\n",
       "      <td>871200.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id         price      bedrooms     bathrooms   sqft_living  \\\n",
       "count  2.161300e+04  2.161300e+04  21613.000000  21613.000000  21613.000000   \n",
       "mean   4.580302e+09  5.400881e+05      3.370842      2.114757   2079.899736   \n",
       "std    2.876566e+09  3.671272e+05      0.930062      0.770163    918.440897   \n",
       "min    1.000102e+06  7.500000e+04      0.000000      0.000000    290.000000   \n",
       "25%    2.123049e+09  3.219500e+05      3.000000      1.750000   1427.000000   \n",
       "50%    3.904930e+09  4.500000e+05      3.000000      2.250000   1910.000000   \n",
       "75%    7.308900e+09  6.450000e+05      4.000000      2.500000   2550.000000   \n",
       "max    9.900000e+09  7.700000e+06     33.000000      8.000000  13540.000000   \n",
       "\n",
       "           sqft_lot        floors    waterfront          view     condition  \\\n",
       "count  2.161300e+04  21613.000000  21613.000000  21613.000000  21613.000000   \n",
       "mean   1.510697e+04      1.494309      0.007542      0.234303      3.409430   \n",
       "std    4.142051e+04      0.539989      0.086517      0.766318      0.650743   \n",
       "min    5.200000e+02      1.000000      0.000000      0.000000      1.000000   \n",
       "25%    5.040000e+03      1.000000      0.000000      0.000000      3.000000   \n",
       "50%    7.618000e+03      1.500000      0.000000      0.000000      3.000000   \n",
       "75%    1.068800e+04      2.000000      0.000000      0.000000      4.000000   \n",
       "max    1.651359e+06      3.500000      1.000000      4.000000      5.000000   \n",
       "\n",
       "              grade    sqft_above  sqft_basement      yr_built  yr_renovated  \\\n",
       "count  21613.000000  21613.000000   21613.000000  21613.000000  21613.000000   \n",
       "mean       7.656873   1788.390691     291.509045   1971.005136     84.402258   \n",
       "std        1.175459    828.090978     442.575043     29.373411    401.679240   \n",
       "min        1.000000    290.000000       0.000000   1900.000000      0.000000   \n",
       "25%        7.000000   1190.000000       0.000000   1951.000000      0.000000   \n",
       "50%        7.000000   1560.000000       0.000000   1975.000000      0.000000   \n",
       "75%        8.000000   2210.000000     560.000000   1997.000000      0.000000   \n",
       "max       13.000000   9410.000000    4820.000000   2015.000000   2015.000000   \n",
       "\n",
       "            zipcode           lat          long  sqft_living15     sqft_lot15  \n",
       "count  21613.000000  21613.000000  21613.000000   21613.000000   21613.000000  \n",
       "mean   98077.939805     47.560053   -122.213896    1986.552492   12768.455652  \n",
       "std       53.505026      0.138564      0.140828     685.391304   27304.179631  \n",
       "min    98001.000000     47.155900   -122.519000     399.000000     651.000000  \n",
       "25%    98033.000000     47.471000   -122.328000    1490.000000    5100.000000  \n",
       "50%    98065.000000     47.571800   -122.230000    1840.000000    7620.000000  \n",
       "75%    98118.000000     47.678000   -122.125000    2360.000000   10083.000000  \n",
       "max    98199.000000     47.777600   -121.315000    6210.000000  871200.000000  "
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7eebcb48",
   "metadata": {},
   "source": [
    "# Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "8d3f01bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['bedrooms'] = df['bedrooms'].replace(33,3) #Mengganti nilai 33 menjadi 3\n",
    "df['bathrooms'] = df['bathrooms'].astype('int') #Mengubah tipe data float menjadi int"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "72c0d49d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id               0\n",
       "date             0\n",
       "price            0\n",
       "bedrooms         0\n",
       "bathrooms        0\n",
       "sqft_living      0\n",
       "sqft_lot         0\n",
       "floors           0\n",
       "waterfront       0\n",
       "view             0\n",
       "condition        0\n",
       "grade            0\n",
       "sqft_above       0\n",
       "sqft_basement    0\n",
       "yr_built         0\n",
       "yr_renovated     0\n",
       "zipcode          0\n",
       "lat              0\n",
       "long             0\n",
       "sqft_living15    0\n",
       "sqft_lot15       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum() #Mencari missing value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "5073d961",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Drop columns yang sekiranya tidak terkait\n",
    "df.drop(columns='lat',inplace =True )\n",
    "df.drop(columns='long',inplace =True)\n",
    "df.drop(columns='zipcode',inplace =True)\n",
    "df.drop(columns='id',inplace =True)\n",
    "df.drop(columns='date',inplace =True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "fa86c9ca",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1180</td>\n",
       "      <td>0</td>\n",
       "      <td>1955</td>\n",
       "      <td>0</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>538000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2570</td>\n",
       "      <td>7242</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2170</td>\n",
       "      <td>400</td>\n",
       "      <td>1951</td>\n",
       "      <td>1991</td>\n",
       "      <td>1690</td>\n",
       "      <td>7639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>770</td>\n",
       "      <td>0</td>\n",
       "      <td>1933</td>\n",
       "      <td>0</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>604000.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1960</td>\n",
       "      <td>5000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>1050</td>\n",
       "      <td>910</td>\n",
       "      <td>1965</td>\n",
       "      <td>0</td>\n",
       "      <td>1360</td>\n",
       "      <td>5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1680</td>\n",
       "      <td>0</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      price  bedrooms  bathrooms  sqft_living  sqft_lot  floors  waterfront  \\\n",
       "0  221900.0         3          1         1180      5650     1.0           0   \n",
       "1  538000.0         3          2         2570      7242     2.0           0   \n",
       "2  180000.0         2          1          770     10000     1.0           0   \n",
       "3  604000.0         4          3         1960      5000     1.0           0   \n",
       "4  510000.0         3          2         1680      8080     1.0           0   \n",
       "\n",
       "   view  condition  grade  sqft_above  sqft_basement  yr_built  yr_renovated  \\\n",
       "0     0          3      7        1180              0      1955             0   \n",
       "1     0          3      7        2170            400      1951          1991   \n",
       "2     0          3      6         770              0      1933             0   \n",
       "3     0          5      7        1050            910      1965             0   \n",
       "4     0          3      8        1680              0      1987             0   \n",
       "\n",
       "   sqft_living15  sqft_lot15  \n",
       "0           1340        5650  \n",
       "1           1690        7639  \n",
       "2           2720        8062  \n",
       "3           1360        5000  \n",
       "4           1800        7503  "
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "6f4dee04",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>price</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.315438</td>\n",
       "      <td>0.510072</td>\n",
       "      <td>0.702035</td>\n",
       "      <td>0.089661</td>\n",
       "      <td>0.256794</td>\n",
       "      <td>0.266369</td>\n",
       "      <td>0.397293</td>\n",
       "      <td>0.036362</td>\n",
       "      <td>0.667434</td>\n",
       "      <td>0.605567</td>\n",
       "      <td>0.323816</td>\n",
       "      <td>0.054012</td>\n",
       "      <td>0.126434</td>\n",
       "      <td>0.585379</td>\n",
       "      <td>0.082447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bedrooms</th>\n",
       "      <td>0.315438</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.480389</td>\n",
       "      <td>0.591471</td>\n",
       "      <td>0.032811</td>\n",
       "      <td>0.181098</td>\n",
       "      <td>-0.006609</td>\n",
       "      <td>0.081935</td>\n",
       "      <td>0.025428</td>\n",
       "      <td>0.366509</td>\n",
       "      <td>0.490605</td>\n",
       "      <td>0.309473</td>\n",
       "      <td>0.159180</td>\n",
       "      <td>0.019621</td>\n",
       "      <td>0.402633</td>\n",
       "      <td>0.030408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bathrooms</th>\n",
       "      <td>0.510072</td>\n",
       "      <td>0.480389</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.697875</td>\n",
       "      <td>0.085310</td>\n",
       "      <td>0.473840</td>\n",
       "      <td>0.058798</td>\n",
       "      <td>0.177257</td>\n",
       "      <td>-0.126016</td>\n",
       "      <td>0.606631</td>\n",
       "      <td>0.639933</td>\n",
       "      <td>0.250880</td>\n",
       "      <td>0.433647</td>\n",
       "      <td>0.060436</td>\n",
       "      <td>0.510049</td>\n",
       "      <td>0.080779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sqft_living</th>\n",
       "      <td>0.702035</td>\n",
       "      <td>0.591471</td>\n",
       "      <td>0.697875</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.172826</td>\n",
       "      <td>0.353949</td>\n",
       "      <td>0.103818</td>\n",
       "      <td>0.284611</td>\n",
       "      <td>-0.058753</td>\n",
       "      <td>0.762704</td>\n",
       "      <td>0.876597</td>\n",
       "      <td>0.435043</td>\n",
       "      <td>0.318049</td>\n",
       "      <td>0.055363</td>\n",
       "      <td>0.756420</td>\n",
       "      <td>0.183286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sqft_lot</th>\n",
       "      <td>0.089661</td>\n",
       "      <td>0.032811</td>\n",
       "      <td>0.085310</td>\n",
       "      <td>0.172826</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005201</td>\n",
       "      <td>0.021604</td>\n",
       "      <td>0.074710</td>\n",
       "      <td>-0.008958</td>\n",
       "      <td>0.113621</td>\n",
       "      <td>0.183512</td>\n",
       "      <td>0.015286</td>\n",
       "      <td>0.053080</td>\n",
       "      <td>0.007644</td>\n",
       "      <td>0.144608</td>\n",
       "      <td>0.718557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>floors</th>\n",
       "      <td>0.256794</td>\n",
       "      <td>0.181098</td>\n",
       "      <td>0.473840</td>\n",
       "      <td>0.353949</td>\n",
       "      <td>-0.005201</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.023698</td>\n",
       "      <td>0.029444</td>\n",
       "      <td>-0.263768</td>\n",
       "      <td>0.458183</td>\n",
       "      <td>0.523885</td>\n",
       "      <td>-0.245705</td>\n",
       "      <td>0.489319</td>\n",
       "      <td>0.006338</td>\n",
       "      <td>0.279885</td>\n",
       "      <td>-0.011269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>waterfront</th>\n",
       "      <td>0.266369</td>\n",
       "      <td>-0.006609</td>\n",
       "      <td>0.058798</td>\n",
       "      <td>0.103818</td>\n",
       "      <td>0.021604</td>\n",
       "      <td>0.023698</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.401857</td>\n",
       "      <td>0.016653</td>\n",
       "      <td>0.082775</td>\n",
       "      <td>0.072075</td>\n",
       "      <td>0.080588</td>\n",
       "      <td>-0.026161</td>\n",
       "      <td>0.092885</td>\n",
       "      <td>0.086463</td>\n",
       "      <td>0.030703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>view</th>\n",
       "      <td>0.397293</td>\n",
       "      <td>0.081935</td>\n",
       "      <td>0.177257</td>\n",
       "      <td>0.284611</td>\n",
       "      <td>0.074710</td>\n",
       "      <td>0.029444</td>\n",
       "      <td>0.401857</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.045990</td>\n",
       "      <td>0.251321</td>\n",
       "      <td>0.167649</td>\n",
       "      <td>0.276947</td>\n",
       "      <td>-0.053440</td>\n",
       "      <td>0.103917</td>\n",
       "      <td>0.280439</td>\n",
       "      <td>0.072575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>condition</th>\n",
       "      <td>0.036362</td>\n",
       "      <td>0.025428</td>\n",
       "      <td>-0.126016</td>\n",
       "      <td>-0.058753</td>\n",
       "      <td>-0.008958</td>\n",
       "      <td>-0.263768</td>\n",
       "      <td>0.016653</td>\n",
       "      <td>0.045990</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.144674</td>\n",
       "      <td>-0.158214</td>\n",
       "      <td>0.174105</td>\n",
       "      <td>-0.361417</td>\n",
       "      <td>-0.060618</td>\n",
       "      <td>-0.092824</td>\n",
       "      <td>-0.003406</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grade</th>\n",
       "      <td>0.667434</td>\n",
       "      <td>0.366509</td>\n",
       "      <td>0.606631</td>\n",
       "      <td>0.762704</td>\n",
       "      <td>0.113621</td>\n",
       "      <td>0.458183</td>\n",
       "      <td>0.082775</td>\n",
       "      <td>0.251321</td>\n",
       "      <td>-0.144674</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.755923</td>\n",
       "      <td>0.168392</td>\n",
       "      <td>0.446963</td>\n",
       "      <td>0.014414</td>\n",
       "      <td>0.713202</td>\n",
       "      <td>0.119248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sqft_above</th>\n",
       "      <td>0.605567</td>\n",
       "      <td>0.490605</td>\n",
       "      <td>0.639933</td>\n",
       "      <td>0.876597</td>\n",
       "      <td>0.183512</td>\n",
       "      <td>0.523885</td>\n",
       "      <td>0.072075</td>\n",
       "      <td>0.167649</td>\n",
       "      <td>-0.158214</td>\n",
       "      <td>0.755923</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.051943</td>\n",
       "      <td>0.423898</td>\n",
       "      <td>0.023285</td>\n",
       "      <td>0.731870</td>\n",
       "      <td>0.194050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sqft_basement</th>\n",
       "      <td>0.323816</td>\n",
       "      <td>0.309473</td>\n",
       "      <td>0.250880</td>\n",
       "      <td>0.435043</td>\n",
       "      <td>0.015286</td>\n",
       "      <td>-0.245705</td>\n",
       "      <td>0.080588</td>\n",
       "      <td>0.276947</td>\n",
       "      <td>0.174105</td>\n",
       "      <td>0.168392</td>\n",
       "      <td>-0.051943</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.133124</td>\n",
       "      <td>0.071323</td>\n",
       "      <td>0.200355</td>\n",
       "      <td>0.017276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yr_built</th>\n",
       "      <td>0.054012</td>\n",
       "      <td>0.159180</td>\n",
       "      <td>0.433647</td>\n",
       "      <td>0.318049</td>\n",
       "      <td>0.053080</td>\n",
       "      <td>0.489319</td>\n",
       "      <td>-0.026161</td>\n",
       "      <td>-0.053440</td>\n",
       "      <td>-0.361417</td>\n",
       "      <td>0.446963</td>\n",
       "      <td>0.423898</td>\n",
       "      <td>-0.133124</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.224874</td>\n",
       "      <td>0.326229</td>\n",
       "      <td>0.070958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yr_renovated</th>\n",
       "      <td>0.126434</td>\n",
       "      <td>0.019621</td>\n",
       "      <td>0.060436</td>\n",
       "      <td>0.055363</td>\n",
       "      <td>0.007644</td>\n",
       "      <td>0.006338</td>\n",
       "      <td>0.092885</td>\n",
       "      <td>0.103917</td>\n",
       "      <td>-0.060618</td>\n",
       "      <td>0.014414</td>\n",
       "      <td>0.023285</td>\n",
       "      <td>0.071323</td>\n",
       "      <td>-0.224874</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.002673</td>\n",
       "      <td>0.007854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sqft_living15</th>\n",
       "      <td>0.585379</td>\n",
       "      <td>0.402633</td>\n",
       "      <td>0.510049</td>\n",
       "      <td>0.756420</td>\n",
       "      <td>0.144608</td>\n",
       "      <td>0.279885</td>\n",
       "      <td>0.086463</td>\n",
       "      <td>0.280439</td>\n",
       "      <td>-0.092824</td>\n",
       "      <td>0.713202</td>\n",
       "      <td>0.731870</td>\n",
       "      <td>0.200355</td>\n",
       "      <td>0.326229</td>\n",
       "      <td>-0.002673</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.183192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sqft_lot15</th>\n",
       "      <td>0.082447</td>\n",
       "      <td>0.030408</td>\n",
       "      <td>0.080779</td>\n",
       "      <td>0.183286</td>\n",
       "      <td>0.718557</td>\n",
       "      <td>-0.011269</td>\n",
       "      <td>0.030703</td>\n",
       "      <td>0.072575</td>\n",
       "      <td>-0.003406</td>\n",
       "      <td>0.119248</td>\n",
       "      <td>0.194050</td>\n",
       "      <td>0.017276</td>\n",
       "      <td>0.070958</td>\n",
       "      <td>0.007854</td>\n",
       "      <td>0.183192</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  price  bedrooms  bathrooms  sqft_living  sqft_lot    floors  \\\n",
       "price          1.000000  0.315438   0.510072     0.702035  0.089661  0.256794   \n",
       "bedrooms       0.315438  1.000000   0.480389     0.591471  0.032811  0.181098   \n",
       "bathrooms      0.510072  0.480389   1.000000     0.697875  0.085310  0.473840   \n",
       "sqft_living    0.702035  0.591471   0.697875     1.000000  0.172826  0.353949   \n",
       "sqft_lot       0.089661  0.032811   0.085310     0.172826  1.000000 -0.005201   \n",
       "floors         0.256794  0.181098   0.473840     0.353949 -0.005201  1.000000   \n",
       "waterfront     0.266369 -0.006609   0.058798     0.103818  0.021604  0.023698   \n",
       "view           0.397293  0.081935   0.177257     0.284611  0.074710  0.029444   \n",
       "condition      0.036362  0.025428  -0.126016    -0.058753 -0.008958 -0.263768   \n",
       "grade          0.667434  0.366509   0.606631     0.762704  0.113621  0.458183   \n",
       "sqft_above     0.605567  0.490605   0.639933     0.876597  0.183512  0.523885   \n",
       "sqft_basement  0.323816  0.309473   0.250880     0.435043  0.015286 -0.245705   \n",
       "yr_built       0.054012  0.159180   0.433647     0.318049  0.053080  0.489319   \n",
       "yr_renovated   0.126434  0.019621   0.060436     0.055363  0.007644  0.006338   \n",
       "sqft_living15  0.585379  0.402633   0.510049     0.756420  0.144608  0.279885   \n",
       "sqft_lot15     0.082447  0.030408   0.080779     0.183286  0.718557 -0.011269   \n",
       "\n",
       "               waterfront      view  condition     grade  sqft_above  \\\n",
       "price            0.266369  0.397293   0.036362  0.667434    0.605567   \n",
       "bedrooms        -0.006609  0.081935   0.025428  0.366509    0.490605   \n",
       "bathrooms        0.058798  0.177257  -0.126016  0.606631    0.639933   \n",
       "sqft_living      0.103818  0.284611  -0.058753  0.762704    0.876597   \n",
       "sqft_lot         0.021604  0.074710  -0.008958  0.113621    0.183512   \n",
       "floors           0.023698  0.029444  -0.263768  0.458183    0.523885   \n",
       "waterfront       1.000000  0.401857   0.016653  0.082775    0.072075   \n",
       "view             0.401857  1.000000   0.045990  0.251321    0.167649   \n",
       "condition        0.016653  0.045990   1.000000 -0.144674   -0.158214   \n",
       "grade            0.082775  0.251321  -0.144674  1.000000    0.755923   \n",
       "sqft_above       0.072075  0.167649  -0.158214  0.755923    1.000000   \n",
       "sqft_basement    0.080588  0.276947   0.174105  0.168392   -0.051943   \n",
       "yr_built        -0.026161 -0.053440  -0.361417  0.446963    0.423898   \n",
       "yr_renovated     0.092885  0.103917  -0.060618  0.014414    0.023285   \n",
       "sqft_living15    0.086463  0.280439  -0.092824  0.713202    0.731870   \n",
       "sqft_lot15       0.030703  0.072575  -0.003406  0.119248    0.194050   \n",
       "\n",
       "               sqft_basement  yr_built  yr_renovated  sqft_living15  \\\n",
       "price               0.323816  0.054012      0.126434       0.585379   \n",
       "bedrooms            0.309473  0.159180      0.019621       0.402633   \n",
       "bathrooms           0.250880  0.433647      0.060436       0.510049   \n",
       "sqft_living         0.435043  0.318049      0.055363       0.756420   \n",
       "sqft_lot            0.015286  0.053080      0.007644       0.144608   \n",
       "floors             -0.245705  0.489319      0.006338       0.279885   \n",
       "waterfront          0.080588 -0.026161      0.092885       0.086463   \n",
       "view                0.276947 -0.053440      0.103917       0.280439   \n",
       "condition           0.174105 -0.361417     -0.060618      -0.092824   \n",
       "grade               0.168392  0.446963      0.014414       0.713202   \n",
       "sqft_above         -0.051943  0.423898      0.023285       0.731870   \n",
       "sqft_basement       1.000000 -0.133124      0.071323       0.200355   \n",
       "yr_built           -0.133124  1.000000     -0.224874       0.326229   \n",
       "yr_renovated        0.071323 -0.224874      1.000000      -0.002673   \n",
       "sqft_living15       0.200355  0.326229     -0.002673       1.000000   \n",
       "sqft_lot15          0.017276  0.070958      0.007854       0.183192   \n",
       "\n",
       "               sqft_lot15  \n",
       "price            0.082447  \n",
       "bedrooms         0.030408  \n",
       "bathrooms        0.080779  \n",
       "sqft_living      0.183286  \n",
       "sqft_lot         0.718557  \n",
       "floors          -0.011269  \n",
       "waterfront       0.030703  \n",
       "view             0.072575  \n",
       "condition       -0.003406  \n",
       "grade            0.119248  \n",
       "sqft_above       0.194050  \n",
       "sqft_basement    0.017276  \n",
       "yr_built         0.070958  \n",
       "yr_renovated     0.007854  \n",
       "sqft_living15    0.183192  \n",
       "sqft_lot15       1.000000  "
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Mencari korelasi\n",
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "b7c2d300",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df['sqft_living']\n",
    "y = df['price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "3af2390f",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.iloc[:,3:4].values\n",
    "y = df.iloc[:,:1].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "9143ca22",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Import module \n",
    "#Split data menjadi Training set dan Test set\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.3, random_state = 101)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "e8bb4944",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(15129, 1)\n",
      "(15129, 1)\n",
      "(6484, 1)\n",
      "(6484, 1)\n"
     ]
    }
   ],
   "source": [
    "print(X_train.shape)\n",
    "print(y_train.shape)\n",
    "print(X_test.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "0d63949c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Fit Regresi Linear Simpel ke Traning set\n",
    "from sklearn.linear_model import LinearRegression\n",
    "reg = LinearRegression()\n",
    "reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "bc8e5c17",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Prediksi hasil tes set\n",
    "y_pred = reg.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "64d46fc3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'price')"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visualisasi Hasil Training set\n",
    "plt.scatter(X_train, y_train, color='red')\n",
    "plt.plot(X_train, reg.predict(X_train), color='blue')\n",
    "plt.title('Price vs sqrt living (Training set)')\n",
    "plt.xlabel('sqft living')\n",
    "plt.ylabel('price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "9870f227",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'price')"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visualisasi Hasil Test set\n",
    "plt.scatter(X_test, y_test, color='green')\n",
    "plt.plot(X_train, reg.predict(X_train), color = 'blue')\n",
    "plt.title('Price vs sqft living (test set)')\n",
    "plt.xlabel('sqft living')\n",
    "plt.ylabel('price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "81158100",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[379006.37269363]])"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#memprediksi harga rumah dengan sqft_livng 1500\n",
    "reg.predict([[1500]])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95d59045",
   "metadata": {},
   "source": [
    "harga rumah dengan sqft_livng 1500 adalah $379.006"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
